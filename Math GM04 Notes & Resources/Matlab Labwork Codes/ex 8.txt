% EXERCISE 8 CODE -- MATRIX INVERSION
% SOLVING THE PROBLEM u_xx+u_yy=0 ON A UNIT SQUARE WITH u=y ON x=0, x=1 AND
% u = 1 ON y = 1. THE SOLUTION IS  u=y.

% START WITH A SMALL 4X4 GRID. THIS MEANS WE HAVE 4 UNKNOWNS (WE KNOW THE
% VALUES ON THE BOUNDARIES) AND THE SYSTEM TO BE SOLVED CAN BE WRITTEN AS
% Au = b WHERE u IS THE VECTOR OF UNKNOWNS AND A AND b ARE COMPUTED BELOW.
% BECAUSE WE ARE USING A 4X4 GRID, WE MUST TAKE h = 1/3.
clear all

h = 1/3;

% 1 - EXPLICIT COMPUTATION
A = [-4 1 1 0; 1 -4 0 1; 1 0 -4 1; 0 1 1 -4];
b = [-h; -h; -1-2*h; -1-2*h];

u = A\b;

% ITERATIVE METHODS -- SET OUR STOPPING CRITERIA TO BE WHEN THE AVERAGE
% VALUES OF SUCCESSIVE ITERATIONS ARE CLOSE TOGETHER

tol = 1e-4;

% 2: POINT-JACOBI METHOD
D = diag(diag(A));
A1 = A - D;
u_old = ones(4,1); % DELIBERATELY BAD INITIAL GUESS
change = 1; % NEED TO DEFINE AN INITIAL VALUE FOR CHANGE SO THE WHILE LOOP CAN EXECUTE
i1 = 0;

while change>tol
    u_new = D\(b-A1*u_old); % UPDATING RULE FOR POINT-JACOBI
    av_old = mean(u_old);
    av_new = mean(u_new);
    change = abs(av_old-av_new);
    u_old = u_new; % UPDATE THE STORED VALUE OF THE OLD ITERATION
    i1 = i1+1; % TO COUNT HOW MANY ITERATIONS ARE NEEDED
end